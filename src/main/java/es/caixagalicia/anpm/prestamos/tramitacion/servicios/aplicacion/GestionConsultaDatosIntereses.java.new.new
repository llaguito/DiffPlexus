/**
 */
package es.caixagalicia.anpm.prestamos.tramitacion.servicios.aplicacion;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import es.caixagalicia.anpm.prestamos.catalogo.utilidades.Utilidades;
import es.caixagalicia.anpm.prestamos.tramitacion.persistencia.producto.CondicionesInteresC;
import es.caixagalicia.anpm.prestamos.tramitacion.utilidades.Constantes;
import es.caixagalicia.anpm.prestamos.tramitacion.utilidades.InteresDifTO;
import es.caixagalicia.anpm.prestamos.tramitacion.utilidades.UtilidadesGestionIndicadores;
import es.caixagalicia.anpm.prestamos.tramitacion.utilidades.UtilidadesTramitacion;
import es.caixagalicia.ifrt.core.IContexto;
import es.caixagalicia.ifrt.core.IDatosEntradaTx;
import es.caixagalicia.ifrt.core.ServicioNegocio;
import es.caixagalicia.ifrt.util.Helper;
import es.caixagalicia.ifrt.mensajes.Mensaje;

/**
 * @author V361466
 */
public class GestionConsultaDatosIntereses {

    /**
     * Constantes
     */
    private static final int CTE_CC = 507;

    private static final int CTE_CO = 167;

    private static final int CTE_CO_CONDICIONES_INTERES = 155;

    private static final int CTE_CC_INFRAESTRUCTURA = 107;

    private static final int CTE_CO_IFSN = 52;

    private static final BigDecimal CTE_ID_IDEALISTA = new BigDecimal(1597);

    private static final String CTE_00 = "00";

    private static final String CTE_01 = "01";

    private static final String CTE_02 = "02";

    private static final String CTE_03 = "03";

    private static final String CTE_04 = "04";

    private static final String CTE_05 = "05";

    private static final String CTE_06 = "06";

    private static final String CTE_NO = "No";

    private static final String CTE_SI = "Sí";

    private static final BigDecimal CTE_ID_IDEALISTA_ANPMNLV_TIPO = new BigDecimal(533);

    private static final BigDecimal CTE_ID_IDEALISTA_ANPMNLV_PERIODICIDAD_CONSULTA = new BigDecimal(642);

    private static final BigDecimal CTE_ID_IDEALISTA_ANPMLV_IND_VALORACION = new BigDecimal(544);

    private static final BigDecimal CTE_ID_IDEALISTA_ANPMLV_TIPO_INTERES_DEMORA = new BigDecimal(534);

    private static final String CTE_PRODUCTO = "CODIGOPRODUCTO";

    private static final String CTE_SUBPRODUCTO = "CODIGOSUBPRODUCTO";

    private static final String CTE_COLECTIVO = "COLECTIVO";

    private static final String CTE_VERSION = "VERSIONGENERAL";

    private static final String CTE_ID_TARIFA = "ID_TARIFA";

    private static final String CTE_IND_FILTRARNIVEL = "IND_FILTRARNIVEL";

    // textos $NON-NL-1$
    private static final String CTE_TXT_MINIMO = "M_NIMO_548618513";

    // $NON-NL-1$
    private static final String CTE_TXT_MAXIMO = "M_XIMO_214303911";

    // $NON-NL-1$
    private static final String CTE_TXT_BONIFICADO = "BONIFICADO_145800506";

    // $NON-NL-1$
    private static final String CTE_TXT_NO_APLICA = "M_NIMO_VARIACI_N_APLICA_892411565";

    // $NON-NL-1$
    private static final String CTE_TXT_APLICA_INTERES_RESULTANTE = "M_NIMO_VARIACI_N_APLICA_INTER_S_RESULTANTE_1942838056";

    // $NON-NL-1$
    private static final String CTE_TXT_APLICA_TIPO_REFERENCIA = "M_NIMO_VARIACI_N_APLICA_TIPO_REFERENCIA_1243367403";

    private static final String CTE_PASO = "PASO";

    private static final String CTE_IDLISTA_IFSN = "IDLISTA";

    private static final String CTE_IDVALOR_IFSN = "IFSNN069020";

    private static final String CTE_ESBO = "MARCA_BO";

    private static final String CTE_PLAZO = "PLAZO";

    private static final String CTE_ORIGEN = "ORIGEN";

    private static final String CTE_ANPMN014 = "ANPMN014";

    private static final String CTE_ANPMN015 = "ANPMN015";

    private static final String CTE_ANPMN018 = "ANPMN018";

    private static final String CTE_DESCRIPCION_TIPO_FLEXIBILIDAD = "IFSNN069080";

    // ANPM_155
    private static final String CTE_OFICINA_SOLICITUD = "OFICINA_SOLICITUD";

    private static final String CTE_NUMERO_SOLICITUD = "NUMERO_SOLICITUD";

    private static final String CTE_VERSION_SOLICITUD = "VERSION_SOLICITUD";

    private static final String CTE_NUC_EXPEDIENTE = "NUC_EXPEDIENTE";

    // CNTX : ANPMN014
    private static final String CTE_TIP_INTERES = "ANPMN014070";

    private static final String CTE_ORDEN_014 = "ANPMN014060";

    private static final String CTE_DIFERENCIAL_MIN_MAX_ESTANDAR = "ANPMN015130";

    private static final String CTE_INDICADOR_INTERES014 = "ANPMN014180";

    private static final String CTE_INTERES_ESTANDAR = "ANPMN014150";

    private static final String CTE_PLAZO_ESTANDAR = "ANPMN014110";

    private static final String CTE_ID_FLEXIBILIDAD = "ANPMN014860";

    private static final String CTE_NUM_PERIODO_REVISION_ESTANDAR = "ANPMN014450";

    private static final String CTE_UNIDAD_PERIODO_REVISION = "ANPMN014490";

    private static final String CTE_TIPO_PERIODO_REVISION = "ANPMN014510";

    private static final String CTE_NUM_PERIODOS_PERIODICIDAD = "ANPMN014550";

    private static final String CTE_UNIDAD_PERIODOS_PERIODICIDAD = "ANPMN014570";

    private static final String CTE_TIPO_PERIODOS_PERIODICIDAD = "ANPMN014590";

    private static final String CTE_VALORACION = "ANPMN014090";

    private static final String CTE_INDICADOR_VALORACION = "ANPMN014100";

    private static final String CTE_PAGO_UNICO = "ANPMN014540";

    private static final String CTE_GESTION_CAMPA_PRESTAMOS = "ANPMN014080";

    private static final String CTE_TIPO_INTERES_DEMORA = "ANPMN014360";

    private static final String CTE_INDICADOR_PORCENTAJE_SOBRE_CAPITAL = "ANPMN014380";

    private static final String CTE_PORCENTAJE_SOBRE_CAPITAL = "ANPMN014370";

    private static final String CTE_INDICADOR_PLAZO = "ANPMN014140";

    private static final String CTE_INDICADOR_NUM_PERIODOS_PERIODICIDAD = "ANPMN014560";

    private static final String CTE_INDICADOR_UNIDAD_PERIODOS_PERIODICIDAD = "ANPMN014580";

    private static final String CTE_INDICADOR_TIPO_PERIODOS_PERIODICIDAD = "ANPMN014600";

    private static final String CTE_INDICADOR_INTERES = "ANPMN014180";

    private static final String CTE_INDICADOR_TIPO_REFERENCIA = "ANPMN014270";

    private static final String CTE_INDICADOR_NUM_PERIODOS_REVISION = "ANPMN014480";

    private static final String CTE_UNIDAD_NUM_PERIODOS_REVISION = "ANPMN014500";

    private static final String CTE_TIPO_NUM_PERIODOS_REVISION = "ANPMN014520";

    private static final String CTE_INDICADOR_BLOQUEO = "ANPMN014100";

    private static final String CTE_PORCENTAJE_SOBRE_INTERES = "ANPMN014410";

    // CTX: ANPMN015
    private static final String CTE_ORDEN_015 = "ANPMN015060";

    private static final String CTE_INDICADOR_DIFERENCIAL_MIN_MAX = "ANPMN015160";

    private static final String CTE_DIFERENCIAL_ESTANDAR = "ANPMN015090";

    private static final String CTE_INDICADOR_DIFERENCIAL = "ANPMN015120";

    private static final String CTE_TIPO_REFERENCIA = "ANPMN015210";

    private static final String CTE_TIPO = "ANPMN015070";

    private static final String CTE_INDICADOR_SUELO = "ANPMN015260";

    private static final String CTE_SUELO_ESTANDAR = "ANPMN015230";

    private static final String CTE_INDICADOR_TECHO = "ANPMN015300";

    private static final String CTE_TECHO_ESTANDAR = "ANPMN015270";

    private static final String CTE_INDICADOR_PORC_MIN_VAR = "ANPMN015370";

    private static final String CTE_PORC_MIN_VAR = "ANPMN015360";

    private static final String CTE_MIN_VAR_SOBRE_APLICA = "ANPMN015380";

    private static final String CTE_INDICADOR_APLICA_SUELO = "ANPMN015310";

    private static final String CTE_INDICADOR_DIFERENCIAL_ALTERNATIVO = "ANPMN015200";

    private static final String CTE_INDICADOR_PORCENTAJE_MIN_VAR = "ANPMN015370";

    private static final String CTE_INDICADOR_APLICA_SOBRE = "ANPMN015220";

    private static final String CTE_INDICADOR_SUELO_INI = "ANPMN015350";

    private static final String CTE_SUELO_INTERES_INI_STANDAR = "ANPMN015320";

    // CTX: ANPMN018
    private static final String CTE_TIPO_REFERENCIA_018 = "ANPMN018030";

    private static final String CTE_DESCRIPCION_REFERENCIA_018 = "ANPMN018210";

    private static final String CTE_PRIORIDAD_018 = "ANPMN018050";

    // ctx: 052
    private static final String CTE_TIPO_INTERES_052 = "ANPMN052080";

    private static final String CTE_TIPO_REFERENCIA_052 = "ANPMN052160";

    private static final String CTE_DIFERENCIAL_052 = "ANPMN052270";

    private static final String CTE_INTERES_052 = "ANPMN052130";

    private static final String CTE_PLAZO_TRAMO_INTERES_052 = "ANPMN052110";

    private static final String CTE_PERIDICIDAD_MUN_PERIODO_052 = "ANPMN052430";

    private static final String CTE_PERIDICIDAD_UNIDAD_PERIODO_052 = "ANPMN052440";

    private static final String CTE_PERIDICIDAD_TIPO_PERIODO_052 = "ANPMN052450";

    private static final String CTE_VALORACION_052 = "ANPMN052100";

    private static final String CTE_DEMORA_SOBRE_INTERES_052 = "ANPMN052360";

    private static final String CTE_SUELO_052 = "ANPMN052550";

    private static final String CTE_SOBRE_APLICA_SUELO_052 = "ANPMN052590";

    private static final String CTE_APLICA_SUELO_INT_INICIAL_052 = "ANPMN052520";

    private static final String CTE_TECHO_052 = "ANPMN052570";

    private static final String CTE_ORDEN_052 = "ANPMN052040";

    private static final String CTE_DIFERENCIAL_BONIFICADO_052 = "ANPMN052310";

    private static final String CTE_DIFERENCIAL_BONIFICADO_052_290 = "ANPMN052290";

    private static final String CTE_GESTION_CAMPANAS_052 = "ANPMN052090";

    private static final String CTE_NUM_PERIODOS_REVISION_052 = "ANPMN052380";

    private static final String CTE_UNIDAD_PERIODOS_REVISION_052 = "ANPMN052400";

    private static final String CTE_TIPO_PERIODOS_REVISION_052 = "ANPMN052410";

    private static final String CTE_MINIMO_VARIACION_052 = "ANPMN052600";

    private static final String CTE_PRIORIDAD_052 = "ANPMN052060";

    private static final String CTE_TIPO_DEMORA_052 = "ANPMN052330";

    private static final String CTE_INDICADOR_FLEXIBILDIAD_052 = "ANPMN052690";

    private static final String CTE_PERIODO_MIN_REVISION_052 = "ANPMN052420";

    private static final String CTE_PAGO_UNICO_A_VTO_FINAL_052 = "ANPMN052460";

    private static final String CTE_TIPO_INTERES_DEMORA_052 = "ANPMN052330";

    private static final String CTE_TIPO_CONDICION_052 = "ANPMN052050";

    private static final String CTE_NIVEL_DIFERENCIAL_MINIMO_MAXIMO_052 = "ANPMN052300";

    private static final String CTE_DIFERENCIAL_MINIMO_MAXIMO_052 = "ANPMN052290";

    private static final String CTE_MIN_VARIACION_052 = "ANPMN052600";

    private static final String CTE_IND_MIN_VARIACION_052 = "ANPMN052600";

    private static final String CTE_SUELO_INT_INI_052 = "ANPMN052530";

    public GestionConsultaDatosIntereses() {
        super();
    }

    /**
     * @param producto
     * @param subproducto
     * @param version
     * @param colectivo
     * @param paso
     * @param idTarifa
     * @return
     */
    public static List<CondicionesInteresC> comprobarDemora(BigDecimal oficina, BigDecimal numSolicitud, BigDecimal version, BigDecimal nuc) {
        GestionCondicionesInteres gi = new GestionCondicionesInteres();
        // Integer codError = new Integer(0);
        BigDecimal bidOficinaSolicitud = oficina;
        BigDecimal bidNumeroSolicitud = numSolicitud;
        BigDecimal bidVersionSolicitud = version;
        BigDecimal bidNucExpediente = nuc;
        List<CondicionesInteresC> condicionesInteres;
        condicionesInteres = gi.obtenerCondicionesInteres(Integer.valueOf(bidOficinaSolicitud.intValue()), Integer.valueOf(bidNumeroSolicitud.intValue()), Integer.valueOf(bidVersionSolicitud.intValue()), Integer.valueOf(bidNucExpediente.intValue()));
        /**
         * Tenemos que comprobar si las demoras estan establecidas en su valor
         * correcto
         */
        UtilidadesTramitacion.esCorrectaDemora(bidNucExpediente, condicionesInteres);
        return condicionesInteres;
    }

    /**
     * @param producto
     * @param subproducto
     * @param version
     * @param colectivo
     * @param paso
     * @param idTarifa
     * @param bo
     * @param plazo
     * @param origen
     * @param indFiltrarNivel
     * @param nuc
     * @return
     */
    public static IContexto[] consultaObtenerDatosVersionGeneral(BigDecimal producto, BigDecimal subproducto, BigDecimal version, BigDecimal colectivo, BigDecimal paso, BigDecimal idTarifa, String bo, String plazo, BigDecimal origen, String indFiltrarNivel, BigDecimal nuc) {
        IDatosEntradaTx datosEntrada = ServicioNegocio.getPrograma(ServicioNegocio.getContexto(), CTE_CC, CTE_CO);
        if (!Helper.isNullOrEmpty(producto)) {
            datosEntrada.addCampo(CTE_PRODUCTO, producto);
        }
        if (!Helper.isNullOrEmpty(subproducto)) {
            datosEntrada.addCampo(CTE_SUBPRODUCTO, subproducto);
        }
        if (!Helper.isNullOrEmpty(colectivo)) {
            datosEntrada.addCampo(CTE_COLECTIVO, colectivo);
        }
        if (!Helper.isNullOrEmpty(version)) {
            datosEntrada.addCampo(CTE_VERSION, version);
        }
        if (!Helper.isNullOrEmpty(bo)) {
            datosEntrada.addCampo(CTE_ESBO, bo);
        }
        if (!Helper.isNullOrEmpty(idTarifa)) {
            datosEntrada.addCampo(CTE_ID_TARIFA, idTarifa);
        }
        if (!Helper.isNullOrEmpty(paso)) {
            datosEntrada.addCampo(CTE_PASO, paso);
        }
        if (!Helper.isNullOrEmpty(plazo)) {
            datosEntrada.addCampo(CTE_PLAZO, plazo);
        }
        if (!Helper.isNullOrEmpty(origen)) {
            datosEntrada.addCampo(CTE_ORIGEN, origen);
        }
        if (!Helper.isNullOrEmpty(indFiltrarNivel)) {
            datosEntrada.addCampo(CTE_IND_FILTRARNIVEL, indFiltrarNivel);
        }
        if (!Helper.isNullOrEmpty(nuc)) {
            datosEntrada.addCampo(CTE_NUC_EXPEDIENTE, nuc);
        }
        IContexto[] datosSalida = ServicioNegocio.invocarServicio(ServicioNegocio.getContexto(), datosEntrada);
        return datosSalida;
    }

    /**
     * Consulta al servicio de negocio 155 que consulta los datos de la tabla
     * AN27TB01
     *
     * @param oficina
     * @param numSolicitud
     * @param version
     * @param nuc
     * @return
     */
    public static IContexto[] consultaObtenerDatosCondicionesInteres(BigDecimal oficina, BigDecimal numSolicitud, BigDecimal version, BigDecimal nuc) {
        IDatosEntradaTx datosEntrada = ServicioNegocio.getPrograma(ServicioNegocio.getContexto(), CTE_CC, CTE_CO_CONDICIONES_INTERES);
        datosEntrada.addCampo(CTE_OFICINA_SOLICITUD, oficina);
        datosEntrada.addCampo(CTE_NUMERO_SOLICITUD, numSolicitud);
        datosEntrada.addCampo(CTE_VERSION_SOLICITUD, version);
        datosEntrada.addCampo(CTE_NUC_EXPEDIENTE, nuc);
        IContexto[] datosSalida = ServicioNegocio.invocarServicio(ServicioNegocio.getContexto(), datosEntrada);
        return datosSalida;
    }

    /**
     * descripción del servicio IFSN_052
     *
     * @param idIdealista
     * @param idValor
     * @return
     */
    public static String obtenerDescripcionLista(BigDecimal idLista, String idValor) {
        String texto = null;
        IDatosEntradaTx datosEntrada = ServicioNegocio.getPrograma(ServicioNegocio.getContexto(), CTE_CC_INFRAESTRUCTURA, CTE_CO_IFSN);
        datosEntrada.addCampo(CTE_IDLISTA_IFSN, idLista);
        IContexto[] datosSalida = ServicioNegocio.invocarServicio(ServicioNegocio.getContexto(), datosEntrada);
        for (IContexto datos : datosSalida) {
            if (datos.getString(CTE_IDVALOR_IFSN).equals(idValor)) {
                // Tipo de interes
                texto = datos.getString(CTE_DESCRIPCION_TIPO_FLEXIBILIDAD);
            }
        }
        return texto;
    }

    /**
     * Para saber si un préstamo es de interés fijo o variable hay que mirar el
     * tipo de interés en la tabla AN27TB01, es decir si existe alguna fila con
     * (AN270050=0 AND AN270080 IN (02,03,04,05) )
     *
     * @param
     * @return True si el presatamo es fijo, False en otro caso
     */
    private static boolean isPrestamoFijo(BigDecimal tipoCondicion, String tipoInteres) {
        final BigDecimal strIntPropTipoCondicion = tipoCondicion;
        final String strIntPropTipoInteres = tipoInteres;
        boolean prestamoFijo = Boolean.TRUE;
        if (0 == Constantes.INTERES_NIVEL_TIPO_INTERES.compareTo(strIntPropTipoCondicion)) {
            if (Constantes.TIPO_INT_VARIABLE.equals(strIntPropTipoInteres) || Constantes.TIPO_INT_VAR_BONIF.equals(strIntPropTipoInteres) || Constantes.TIPO_INT_VAR_PENAL.equals(strIntPropTipoInteres) || Constantes.TIPO_INT_VAR_DIF_BONIF.equals(strIntPropTipoInteres)) {
                prestamoFijo = false;
            }
        }
        return prestamoFijo;
    }

    /**
     * @param contextos
     * @return
     */
    public static List<InteresDifTO> valoresInteresDiferencial(IContexto[] contextos, List<CondicionesInteresC> lista, BigDecimal indicadorModo) {
        int cont = 0;
        BigDecimal indicador = BigDecimal.ZERO;
        IContexto[] array014 = UtilidadesTramitacion.getArrayContexto(CTE_ANPMN014, contextos);
        IContexto[] array015 = UtilidadesTramitacion.getArrayContexto(CTE_ANPMN015, contextos);
        IContexto[] array018 = UtilidadesTramitacion.getArrayContexto(CTE_ANPMN018, contextos);
        BigDecimal visible = BigDecimal.ONE;
        BigDecimal noVisible = BigDecimal.ZERO;
        List<InteresDifTO> listaIntereses = new ArrayList<InteresDifTO>();
        for (IContexto datos : array014) {
            InteresDifTO interes = new InteresDifTO();
            interes.setFlexibilidad(obtenerDescripcionLista(CTE_ID_IDEALISTA, datos.getBigDecimal(CTE_ID_FLEXIBILIDAD).toString()));
            if (0 != BigDecimal.ZERO.compareTo(datos.getBigDecimal(CTE_ID_FLEXIBILIDAD))) {
                interes.setIndicadorFlexibilidad(BigDecimal.ONE.toString());
            } else {
                interes.setIndicadorFlexibilidad(BigDecimal.ZERO.toString());
            }
            interes.setTipoInteres(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMNLV_TIPO, datos.getString(CTE_TIP_INTERES)));
            interes.setOrden(datos.getBigDecimal(CTE_ORDEN_014));
            interes.setIndicadorVisibilidadTechoSuelo(noVisible);
            interes.setIndicadorVisibilidadMinimo(noVisible);
            interes.setIndicadorVisibilidadMaximo(noVisible);
            interes.setIndicadorVisibilidadMinimoVariacion(noVisible);
            interes.setIndicadorVisibilidadMínimoSecciónInferior(noVisible);
            interes.setIndicadorVisibilidadAplicaIntIni(noVisible);
            interes.setIndicadorPrestamoVariableFijo(noVisible);
            interes.setIndicadorPrestamoReferenciado(noVisible);
            interes.setIndicadorVisibilidadAjusteInteres(noVisible);
            for (IContexto datosts : array015) {
                if (0 == datos.getBigDecimal(CTE_ORDEN_014).compareTo(datosts.getBigDecimal(CTE_ORDEN_015))) {
                    String diferencial = UtilidadesGestionIndicadores.cruceCatalogo(datosts.getString(CTE_INDICADOR_DIFERENCIAL_MIN_MAX), datosts.getBigDecimal(CTE_DIFERENCIAL_MIN_MAX_ESTANDAR).setScale(4).toString(), datosts.getBigDecimal(CTE_DIFERENCIAL_MIN_MAX_ESTANDAR).setScale(4).toString());
                    if (!isPrestamoFijo(datosts.getBigDecimal(CTE_TIPO), datos.getString(CTE_TIP_INTERES))) {
                        interes.setIndicadorVisibilidadAjusteInteres(BigDecimal.ONE);
                        interes.setIndicadorPrestamoVariableFijo(BigDecimal.ONE);
                        if (Utilidades.esTipoReferenciaNoReferenciado(datosts.getBigDecimal(CTE_TIPO_REFERENCIA).toString())) {
                            if (datos.getString(CTE_TIP_INTERES).equals("03")) {
                                if (!Helper.isNullOrEmpty(diferencial)) {
                                    interes.setIndicadorVisibilidadMinimo(noVisible);
                                    interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), INTER_S_M_XIMO_APLICAR_BONIFICACI_N_509579681).toString());
                                    interes.setLiteralMaximo(new Mensaje(ServicioNegocio.getContexto(), INTER_S_BONIFICACI_N_708356412).toString());
                                }
                            }
                            if (datos.getString(CTE_TIP_INTERES).equals("04")) {
                                if (!Helper.isNullOrEmpty(diferencial)) {
                                    interes.setIndicadorVisibilidadMaximo(BigDecimal.ZERO);
                                    interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), INTER_S_M_NIMO_APLICAR_PENALIZACI_N_1713926098).toString());
                                    interes.setLiteralMinimo(new Mensaje(ServicioNegocio.getContexto(), INTER_S_BONIFICACI_N_708356412).toString());
                                }
                            }
                            interes.setIndicadorPrestamoReferenciado(BigDecimal.ZERO);
                        } else {
                            interes.setIndicadorVisibilidadTechoSuelo(visible);
                            interes.setIndicadorVisibilidadMinimo(visible);
                            interes.setIndicadorVisibilidadMaximo(visible);
                            interes.setIndicadorVisibilidadMinimoVariacion(visible);
                            interes.setIndicadorVisibilidadMínimoSecciónInferior(visible);
                            interes.setIndicadorVisibilidadAplicaIntIni(visible);
                            if (0 == BigDecimal.ZERO.compareTo(datosts.getBigDecimal(CTE_INDICADOR_APLICA_SOBRE))) {
                                interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_1840060995).toString());
                            } else if (0 == BigDecimal.ONE.compareTo(datosts.getBigDecimal(CTE_INDICADOR_APLICA_SOBRE))) {
                                interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_INTER_S_INICIAL_1219035778).toString());
                            } else if (0 == new BigDecimal(2).compareTo(datosts.getBigDecimal(CTE_INDICADOR_APLICA_SOBRE))) {
                                interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_TIPO_REFERENCIA_1669293875).toString());
                            }
                            interes.setLiteralMinimo(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_SUELO_1295253080).toString());
                            interes.setLiteralMaximo(new Mensaje(ServicioNegocio.getContexto(), M_XIMO_TECHO_764767713).toString());
                            interes.setLiteralMinimoVariacion(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_VARIACI_N_1591999918).toString());
                            interes.setLiteralSobreAplicaSuelo(new Mensaje(ServicioNegocio.getContexto(), APLICA_INTER_S_INICIAL_SUELO_323345552).toString());
                            interes.setIndicadorPrestamoReferenciado(BigDecimal.ONE);
                        }
                    }
                    if (0 == indicadorModo.compareTo(BigDecimal.ZERO) || 0 == new BigDecimal(2).compareTo(indicadorModo)) {
                        if (0 != BigDecimal.ZERO.compareTo(datosts.getBigDecimal(CTE_SUELO_ESTANDAR))) {
                            interes.setSueloAplicaInt(datosts.getBigDecimal(CTE_SUELO_ESTANDAR).toString());
                        } else {
                            interes.setSueloAplicaInt("0");
                        }
                    }
                    if (0 == datosts.getBigDecimal(CTE_TIPO).compareTo(BigDecimal.ZERO)) {
                        for (IContexto datostr : array018) {
                            if (0 == datosts.getBigDecimal(CTE_TIPO_REFERENCIA).compareTo(datostr.getBigDecimal(CTE_TIPO_REFERENCIA_018)) && ((0 == BigDecimal.ONE.compareTo(datostr.getBigDecimal(CTE_PRIORIDAD_018)) || 1 == array018.length))) {
                                interes.setTipoReferencia(datostr.getBigDecimal(CTE_TIPO_REFERENCIA_018).toString().concat(new Mensaje(ServicioNegocio.getContexto(), _45).toString()).concat(datostr.getString(CTE_DESCRIPCION_REFERENCIA_018)));
                                interes.setTipoCondicion(datosts.getBigDecimal(CTE_TIPO));
                                interes.setPrioridad(datostr.getBigDecimal(CTE_PRIORIDAD_018));
                            }
                        }
                    }
                    // Sustitutivo
                    if (0 == datosts.getBigDecimal(CTE_TIPO).compareTo(BigDecimal.ONE)) {
                        for (IContexto datostr : array018) {
                            if (0 == datosts.getBigDecimal(CTE_TIPO_REFERENCIA).compareTo(datostr.getBigDecimal(CTE_TIPO_REFERENCIA_018))) {
                                interes.setTipoReferenciaSust(datostr.getBigDecimal(CTE_TIPO_REFERENCIA_018).toString().concat(" - ").concat(datostr.getString(CTE_DESCRIPCION_REFERENCIA_018)));
                                if (!Helper.isNullOrEmpty(UtilidadesGestionIndicadores.cruceCatalogo(datosts.getString(CTE_INDICADOR_DIFERENCIAL), datosts.getBigDecimal(CTE_DIFERENCIAL_ESTANDAR).setScale(4).toString(), null))) {
                                    interes.setDiferencialSustitutivo(new BigDecimal(UtilidadesGestionIndicadores.cruceCatalogo(datosts.getString(CTE_INDICADOR_DIFERENCIAL), datosts.getBigDecimal(CTE_DIFERENCIAL_ESTANDAR).setScale(4).toString(), null)));
                                }
                            }
                            interes.setTipoCondicion(datosts.getBigDecimal(CTE_TIPO));
                            interes.setPrioridad(datostr.getBigDecimal(CTE_PRIORIDAD_018));
                            indicador = BigDecimal.ONE;
                        }
                    }
                    interes.setDiferencial(UtilidadesGestionIndicadores.cruceCatalogo(datosts.getString(CTE_INDICADOR_DIFERENCIAL), datosts.getBigDecimal(CTE_DIFERENCIAL_ESTANDAR).setScale(4).toString(), null));
                    if (datos.getString(CTE_TIP_INTERES).equals("03")) {
                        if (!Helper.isNullOrEmpty(diferencial)) {
                            interes.setDiferencialAlternativo(diferencial.concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_MINIMO).toString()));
                            interes.setDiferencialAlternativoSustitutivo(diferencial.concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_MINIMO).toString()));
                        }
                    }
                    if (datos.getString(CTE_TIP_INTERES).equals("04")) {
                        if (!Helper.isNullOrEmpty(diferencial)) {
                            interes.setDiferencialAlternativo(diferencial.concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_MAXIMO).toString()));
                            interes.setDiferencialAlternativoSustitutivo(diferencial.concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_MAXIMO).toString()));
                        }
                    }
                    if (datos.getString(CTE_TIP_INTERES).equals("05")) {
                        if (!Helper.isNullOrEmpty(diferencial)) {
                            interes.setDiferencialAlternativo(diferencial.concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_BONIFICADO).toString()));
                            interes.setDiferencialAlternativoSustitutivo(diferencial.concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_BONIFICADO).toString()));
                        }
                    }
                    interes.setMinimo(UtilidadesGestionIndicadores.cruceCatalogo(datosts.getString(CTE_INDICADOR_SUELO), datosts.getBigDecimal(CTE_SUELO_ESTANDAR).setScale(4).toString(), datosts.getBigDecimal(CTE_SUELO_ESTANDAR).setScale(4).toString()));
                    if (Helper.isNullOrEmpty(interes.getMinimo())) {
                        interes.setMinimo(BigDecimal.ZERO.setScale(4).toString());
                    }
                    interes.setMaximo(UtilidadesGestionIndicadores.cruceCatalogo(datosts.getString(CTE_INDICADOR_TECHO), datosts.getBigDecimal(CTE_TECHO_ESTANDAR).setScale(4).toString(), datosts.getBigDecimal(CTE_TECHO_ESTANDAR).setScale(4).toString()));
                    if (Helper.isNullOrEmpty(interes.getMaximo())) {
                        interes.setMaximo(BigDecimal.ZERO.setScale(4).toString());
                    }
                    interes.setMinimoVariacion(UtilidadesGestionIndicadores.cruceCatalogo(datosts.getString(CTE_INDICADOR_PORC_MIN_VAR), datosts.getBigDecimal(CTE_PORC_MIN_VAR).setScale(4).toString(), datosts.getBigDecimal(CTE_PORC_MIN_VAR).setScale(4).toString()));
                    if (Helper.isNullOrEmpty(interes.getMinimoVariacion())) {
                        interes.setMinimoVariacion(BigDecimal.ZERO.setScale(4).toString());
                    }
                    if (0 == datosts.getBigDecimal(CTE_MIN_VAR_SOBRE_APLICA).compareTo(BigDecimal.ZERO)) {
                        interes.setSobreAplicaMinimo(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_NO_APLICA).toString());
                    }
                    if (0 == datosts.getBigDecimal(CTE_MIN_VAR_SOBRE_APLICA).compareTo(BigDecimal.ONE)) {
                        interes.setSobreAplicaMinimo(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_APLICA_INTERES_RESULTANTE).toString());
                    }
                    if (0 == datosts.getBigDecimal(CTE_MIN_VAR_SOBRE_APLICA).compareTo(new BigDecimal(2))) {
                        interes.setSobreAplicaMinimo(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_APLICA_TIPO_REFERENCIA).toString());
                    }
                    cont = 1;
                    if (0 == datos.getBigDecimal(CTE_ORDEN_014).compareTo(BigDecimal.ONE) && (datos.getString(CTE_TIP_INTERES).equals("02") || datos.getString(CTE_TIP_INTERES).equals("03") || datos.getString(CTE_TIP_INTERES).equals("04") || datos.getString(CTE_TIP_INTERES).equals("05"))) {
                        if (0 == datos.getBigDecimal(CTE_ORDEN_014).compareTo(datosts.getBigDecimal(CTE_ORDEN_015))) {
                            if (0 == datosts.getBigDecimal(CTE_INDICADOR_APLICA_SUELO).compareTo(BigDecimal.ZERO)) {
                                interes.setSueloAplicaInt("0");
                            } else if (0 == datosts.getBigDecimal(CTE_INDICADOR_APLICA_SUELO).compareTo(BigDecimal.ONE) || 0 == datosts.getBigDecimal(CTE_INDICADOR_APLICA_SUELO).compareTo(new BigDecimal(2))) {
                                interes.setSueloAplicaInt(BigDecimal.ONE.toString());
                            } else {
                                interes.setSueloAplicaInt("0");
                            }
                        }
                    } else if (Helper.isNullOrEmpty(interes.getSueloAplicaInt())) {
                        interes.setSueloAplicaInt("0");
                    }
                }
                cont = 0;
            }
            if (!Helper.isNullOrEmpty(datos.getBigDecimal(CTE_INTERES_ESTANDAR).longValue())) {
                interes.setInteres(UtilidadesGestionIndicadores.cruceCatalogo(datos.getString(CTE_INDICADOR_INTERES014), datos.getBigDecimal(CTE_INTERES_ESTANDAR).setScale(4).toString(), null));
            }
            interes.setPlazo(datos.getBigDecimal(CTE_PLAZO_ESTANDAR));
            interes.setPeriodicidadRevision(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMNLV_PERIODICIDAD_CONSULTA, datos.getBigDecimal(CTE_NUM_PERIODO_REVISION_ESTANDAR).toString().concat(datos.getString(CTE_UNIDAD_PERIODO_REVISION)).concat(datos.getBigDecimal(CTE_TIPO_PERIODO_REVISION).toString())));
            interes.setPeriodicidadInteres(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMNLV_PERIODICIDAD_CONSULTA, datos.getBigDecimal(CTE_NUM_PERIODOS_PERIODICIDAD).toString().concat(datos.getString(CTE_UNIDAD_PERIODOS_PERIODICIDAD)).concat(datos.getBigDecimal(CTE_TIPO_PERIODOS_PERIODICIDAD).toString())));
            interes.setValoracion(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMLV_IND_VALORACION, UtilidadesGestionIndicadores.cruceCatalogo(datos.getString(CTE_INDICADOR_VALORACION), datos.getString(CTE_VALORACION), null)));
            if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ZERO) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(2))) {
                interes.setPagoUnico(CTE_NO);
            }
            if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ONE) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(3))) {
                interes.setPagoUnico(CTE_SI);
            }
            if (datos.getString(CTE_TIP_INTERES).equals("01") || datos.getString(CTE_TIP_INTERES).equals("03") || datos.getString(CTE_TIP_INTERES).equals("04")) {
                interes.setBonificacion(CTE_SI);
            }
            if (datos.getString(CTE_TIP_INTERES).equals("00") || datos.getString(CTE_TIP_INTERES).equals("02") || datos.getString(CTE_TIP_INTERES).equals("06")) {
                interes.setBonificacion(CTE_NO);
            }
            if (datos.getString(CTE_TIP_INTERES).equals("05")) {
                if (0 == datos.getBigDecimal(CTE_GESTION_CAMPA_PRESTAMOS).compareTo(new BigDecimal(2))) {
                    interes.setBonificacion(CTE_SI);
                } else {
                    interes.setBonificacion(CTE_NO);
                }
            }
            interes.setTipoDemora(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMLV_TIPO_INTERES_DEMORA, datos.getBigDecimal(CTE_TIPO_INTERES_DEMORA).toString()));
            if (0 == indicadorModo.compareTo(BigDecimal.ZERO) || 0 == indicadorModo.compareTo(new BigDecimal(2))) {
                interes.setDemora(UtilidadesGestionIndicadores.cruceCatalogo(datos.getString(CTE_INDICADOR_PORCENTAJE_SOBRE_CAPITAL), datos.getBigDecimal(CTE_PORCENTAJE_SOBRE_INTERES).toString(), null));
            }
            for (CondicionesInteresC condicion : lista) {
                if (0 == datos.getBigDecimal(CTE_ORDEN_014).compareTo(new BigDecimal(condicion.getCondicionesInteresKey().getIntOrdenDelTramo()))) {
                    if (0 == condicion.getIntPorDemoraSobreCapital().compareTo(datos.getBigDecimal(CTE_PORCENTAJE_SOBRE_INTERES))) {
                        interes.setDemora(UtilidadesGestionIndicadores.cruceCatalogo(datos.getString(CTE_INDICADOR_PORCENTAJE_SOBRE_CAPITAL), datos.getBigDecimal(CTE_PORCENTAJE_SOBRE_INTERES).toString(), null));
                    } else {
                        interes.setDemora(UtilidadesGestionIndicadores.cruceCatalogo(datos.getString(CTE_INDICADOR_PORCENTAJE_SOBRE_CAPITAL), condicion.getIntPorDemoraSobreCapital().toString(), null));
                    }
                    if (0 != condicion.getIntSuelo().compareTo(BigDecimal.ZERO)) {
                        interes.setSueloAplicaInt("0");
                    }
                }
            }
            if (0 == BigDecimal.ONE.compareTo(indicador)) {
                interes.setTieneSustitutivo(indicador);
            }
            if (!listaIntereses.contains(interes)) {
                listaIntereses.add(interes);
                indicador = BigDecimal.ZERO;
            }
        }
        return listaIntereses;
    }

    private static String concatenado(BigDecimal diferencialAlternativo, String tipoInteres) {
        String diferencial = null;
        if (tipoInteres.equals("03")) {
            if (!Helper.isNullOrEmpty(diferencialAlternativo)) {
                diferencial = (diferencialAlternativo.toString().concat(" - ").concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_MINIMO).toString()));
            }
        }
        if (tipoInteres.equals("04")) {
            if (!Helper.isNullOrEmpty(diferencialAlternativo)) {
                diferencial = (diferencialAlternativo.toString().concat(" - ").concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_MAXIMO).toString()));
            }
        }
        if (tipoInteres.equals("05")) {
            if (!Helper.isNullOrEmpty(diferencialAlternativo)) {
                diferencial = (diferencialAlternativo.toString().concat(" - ").concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_BONIFICADO).toString()));
            }
        }
        return diferencial;
    }

    /**
     * ANPM_445
     *
     * @param contextos
     * @param datosInteres
     * @param ordenTramoInteres
     * @return
     */
    public static List<InteresDifTO> valoresInteresDiferencial(IContexto[] contextos, IContexto[] datosInteres, BigDecimal ordenTramoInteres, List<CondicionesInteresC> lista) {
        IContexto[] array014 = UtilidadesTramitacion.getArrayContexto(CTE_ANPMN014, contextos);
        IContexto[] array015 = UtilidadesTramitacion.getArrayContexto(CTE_ANPMN015, contextos);
        IContexto[] array018 = UtilidadesTramitacion.getArrayContexto(CTE_ANPMN018, contextos);
        List<InteresDifTO> listaIntereses = new ArrayList<InteresDifTO>();
        int cont = 0;
        BigDecimal visible = BigDecimal.ONE;
        BigDecimal noVisible = BigDecimal.ZERO;
        if (UtilidadesTramitacion.isBlankOrNull(ordenTramoInteres)) {
            ordenTramoInteres = BigDecimal.TEN;
        }
        for (IContexto datos : array014) {
            if (0 == ordenTramoInteres.compareTo(datos.getBigDecimal(CTE_ORDEN_014)) || 0 == BigDecimal.TEN.compareTo(ordenTramoInteres)) {
                cont = 0;
                while (cont < datosInteres.length) {
                    if (0 == datos.getBigDecimal(CTE_ORDEN_014).compareTo(datosInteres[cont].getBigDecimal(CTE_ORDEN_052))) {
                        InteresDifTO interesO = new InteresDifTO();
                        interesO.setPrioridadTramo(datosInteres[cont].getBigDecimal(CTE_PRIORIDAD_052));
                        interesO.setTieneSustitutivo(BigDecimal.ZERO);
                        interesO.setTipoInteres(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMNLV_TIPO, datosInteres[cont].getString(CTE_TIPO_INTERES_052)));
                        interesO.setIdTipoInteres(datosInteres[cont].getString(CTE_TIPO_INTERES_052));
                        interesO.setIndicadorVisibilidadTechoSuelo(visible);
                        interesO.setIndicadorVisibilidadMinimo(visible);
                        interesO.setIndicadorVisibilidadMaximo(visible);
                        interesO.setIndicadorVisibilidadMinimoVariacion(visible);
                        interesO.setIndicadorVisibilidadMínimoSecciónInferior(visible);
                        interesO.setIndicadorVisibilidadAplicaIntIni(visible);
                        interesO.setLiteralMinimo(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_SUELO_1295253080).toString());
                        interesO.setLiteralMaximo(new Mensaje(ServicioNegocio.getContexto(), M_XIMO_TECHO_764767713).toString());
                        interesO.setLiteralSobreAplicaSuelo(new Mensaje(ServicioNegocio.getContexto(), SUELO_APLICA_INTER_S_INICIAL_269091119).toString());
                        switch(datosInteres[cont].getBigDecimal(CTE_SOBRE_APLICA_SUELO_052).intValue()) {
                            case 0:
                                {
                                    interesO.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_1840060995).toString());
                                    break;
                                }
                            case 1:
                                {
                                    interesO.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_INTER_S_RESULTANTE_1586160686).toString());
                                    break;
                                }
                            case 2:
                                {
                                    interesO.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_TIPO_REFERENCIA_53848191).toString());
                                    break;
                                }
                        }
                        switch(datosInteres[cont].getBigDecimal(CTE_IND_MIN_VARIACION_052).intValue()) {
                            case 0:
                                {
                                    interesO.setLiteralMinimoVariacion(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_VARIACI_N_APLICA_892411565).toString());
                                    interesO.setLiteralMinimoVariacionTitulo(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_VARIACI_N_1985489437).toString());
                                    break;
                                }
                            case 1:
                                {
                                    interesO.setLiteralMinimoVariacion(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_VARIACI_N_APLICA_INTER_S_RESULTANTE_1942838056).toString());
                                    interesO.setLiteralMinimoVariacionTitulo(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_VARIACI_N_1985489437).toString());
                                    break;
                                }
                            case 2:
                                {
                                    interesO.setLiteralMinimoVariacion(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_VARIACI_N_APLICA_TIPO_REFERENCIA_1243367403).toString());
                                    interesO.setLiteralMinimoVariacionTitulo(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_VARIACI_N_1985489437).toString());
                                    break;
                                }
                        }
                        if (!isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                            interesO.setIndicadorVisibilidadAjusteInteres(BigDecimal.ONE);
                            interesO.setIndicadorPrestamoVariableFijo(BigDecimal.ONE);
                            if (Utilidades.esTipoReferenciaNoReferenciado(datosInteres[cont].getBigDecimal(CTE_TIPO_REFERENCIA_052).toString())) {
                                if (datosInteres[cont].getString(CTE_TIPO_INTERES_052).equals("03")) {
                                    interesO.setIndicadorVisibilidadMinimo(noVisible);
                                    interesO.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), INTER_S_M_XIMO_APLICAR_BONIFICACI_N_509579681).toString());
                                    interesO.setLiteralMaximo(new Mensaje(ServicioNegocio.getContexto(), INTER_S_BONIFICACI_N_708356412).toString());
                                }
                                if (datosInteres[cont].getString(CTE_TIPO_INTERES_052).equals("04")) {
                                    interesO.setIndicadorVisibilidadMaximo(BigDecimal.ZERO);
                                    interesO.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), INTER_S_M_NIMO_APLICAR_PENALIZACI_N_1713926098).toString());
                                    interesO.setLiteralMinimo(new Mensaje(ServicioNegocio.getContexto(), INTER_S_PENALIZACI_N_1693610471).toString());
                                }
                                interesO.setIndicadorPrestamoReferenciado(BigDecimal.ZERO);
                            } else {
                                if (0 == BigDecimal.ZERO.compareTo(datosInteres[cont].getBigDecimal(CTE_SOBRE_APLICA_SUELO_052))) {
                                    interesO.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_1840060995).toString());
                                } else if (0 == BigDecimal.ONE.compareTo(datosInteres[cont].getBigDecimal(CTE_SOBRE_APLICA_SUELO_052))) {
                                    interesO.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_INTER_S_RESULTANTE_1586160686).toString());
                                } else if (0 == new BigDecimal(2).compareTo(datosInteres[cont].getBigDecimal(CTE_SOBRE_APLICA_SUELO_052))) {
                                    interesO.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_TIPO_REFERENCIA_1669293875).toString());
                                }
                                interesO.setIndicadorPrestamoReferenciado(BigDecimal.ONE);
                            }
                        } else {
                            if (0 == BigDecimal.ONE.compareTo(ordenTramoInteres)) {
                                interesO.setInteresInicial(datosInteres[cont].getBigDecimal(CTE_SUELO_INT_INI_052).setScale(4).toString());
                                interesO.setVisibilidadInteresInicial(noVisible);
                                interesO.setBloqueoInteresInicial(noVisible);
                                interesO.setIndicadorAplicaSueloInteresInic(noVisible);
                            } else {
                                interesO.setInteresInicial(datosInteres[cont].getBigDecimal(CTE_SUELO_INT_INI_052).setScale(4).toString());
                                interesO.setIndicadorAplicaSueloInteresInic(noVisible);
                                interesO.setBloqueoInteresInicial(noVisible);
                                interesO.setVisibilidadInteresInicial(noVisible);
                                interesO.setSueloAplicaInt("0");
                            }
                            interesO.setIndicadorCheckBloqueoPrioridad(noVisible);
                        }
                        // Siempre va bloqueado
                        interesO.setIndicadorTipoInteres(UtilidadesGestionIndicadores.indicadorBloqueo(BigDecimal.ZERO));
                        interesO.setPlazo(datosInteres[cont].getBigDecimal(CTE_PLAZO_TRAMO_INTERES_052));
                        for (IContexto datosi : array015) {
                            if (0 == ordenTramoInteres.compareTo(datosi.getBigDecimal(CTE_ORDEN_015)) || 0 == BigDecimal.TEN.compareTo(ordenTramoInteres)) {
                                if (!isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                                    if (0 == BigDecimal.ONE.compareTo(ordenTramoInteres)) {
                                        interesO.setInteresInicial(UtilidadesGestionIndicadores.cruceCatalogo(datosi.getString(CTE_INDICADOR_SUELO_INI), datosi.getBigDecimal(CTE_SUELO_INTERES_INI_STANDAR).setScale(4).toString(), datosInteres[cont].getBigDecimal(CTE_SUELO_INT_INI_052).setScale(4).toString()));
                                    }
                                }
                                if (0 == new BigDecimal(2).compareTo(datosi.getBigDecimal(CTE_INDICADOR_APLICA_SUELO))) {
                                    interesO.setVisibilidadInteresInicial(visible);
                                    interesO.setBloqueoInteresInicial(visible);
                                } else if (0 == BigDecimal.ZERO.compareTo(datosInteres[cont].getBigDecimal(CTE_APLICA_SUELO_INT_INICIAL_052))) {
                                    interesO.setVisibilidadInteresInicial(noVisible);
                                    interesO.setBloqueoInteresInicial(noVisible);
                                }
                                for (IContexto datostr : array018) {
                                    if (0 == BigDecimal.ZERO.compareTo(datosi.getBigDecimal(CTE_TIPO))) {
                                        if (0 == datosi.getBigDecimal(CTE_TIPO_REFERENCIA).compareTo(datostr.getBigDecimal(CTE_TIPO_REFERENCIA_018))) {
                                            if (0 == datosi.getBigDecimal(CTE_TIPO_REFERENCIA).compareTo(datosInteres[cont].getBigDecimal(CTE_TIPO_REFERENCIA_052))) {
                                                interesO.setTipoReferencia(datosInteres[cont].getBigDecimal(CTE_TIPO_REFERENCIA_052).toString().concat(" - ").concat(datostr.getString(CTE_DESCRIPCION_REFERENCIA_018)));
                                                interesO.setIdTipoReferencia(datosInteres[cont].getBigDecimal(CTE_TIPO_REFERENCIA_052));
                                                interesO.setIndicadorDiferencialInteres(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datosi.getString(CTE_INDICADOR_DIFERENCIAL))));
                                                interesO.setIndicadorDiferencialAlternativo(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datosi.getString(CTE_INDICADOR_DIFERENCIAL_ALTERNATIVO))));
                                                interesO.setIndicadorSuelo(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datosi.getString(CTE_INDICADOR_SUELO))));
                                                interesO.setIndicadorTecho(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datosi.getString(CTE_INDICADOR_TECHO))));
                                                interesO.setIndicadorAplicaSueloInteresInic(UtilidadesGestionIndicadores.indicadorBloqueo(datosi.getBigDecimal(CTE_INDICADOR_APLICA_SUELO)));
                                                interesO.setDiferencial(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_052).setScale(4).toString());
                                                interesO.setIndicadorPorcentajeMinVar(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datosi.getString(CTE_INDICADOR_PORCENTAJE_MIN_VAR))));
                                                interesO.setIndicadorPlazo(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_PLAZO))));
                                                interesO.setIndicadorNumPeriododsPeriocidad(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_NUM_PERIODOS_PERIODICIDAD))));
                                                interesO.setIndicadorUnidadPeriodosPeriodicidad(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_UNIDAD_PERIODOS_PERIODICIDAD))));
                                                interesO.setIndicadorTipoPeriodo(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_TIPO_PERIODOS_PERIODICIDAD))));
                                                interesO.setIndicadorInteres(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_INTERES))));
                                                interesO.setIndicadorValoracion(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_VALORACION))));
                                                interesO.setIndicadorNumPeriodosRevision(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_NUM_PERIODOS_REVISION))));
                                                interesO.setIndicadorUnidadPeriodosRevision(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_UNIDAD_NUM_PERIODOS_REVISION))));
                                                interesO.setIndicadorTipoPeriodosRevision(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_TIPO_NUM_PERIODOS_REVISION))));
                                                interesO.setIndicadorTipoPeriodosRevision(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_BLOQUEO))));
                                                interesO.setDemora(UtilidadesGestionIndicadores.cruceCatalogo(datos.getString(CTE_INDICADOR_PORCENTAJE_SOBRE_CAPITAL), datos.getBigDecimal(CTE_PORCENTAJE_SOBRE_CAPITAL).toString(), datosInteres[cont].getBigDecimal(CTE_DEMORA_SOBRE_INTERES_052).toString()));
                                                if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ZERO) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(2))) {
                                                    interesO.setPagoUnico(BigDecimal.ZERO.toString());
                                                }
                                                if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ONE) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(3))) {
                                                    interesO.setPagoUnico(BigDecimal.ONE.toString());
                                                }
                                                if (datos.getString(CTE_TIP_INTERES).equals("01") || datos.getString(CTE_TIP_INTERES).equals("03") || datos.getString(CTE_TIP_INTERES).equals("04")) {
                                                    interesO.setBonificacion(CTE_SI);
                                                }
                                                if (datos.getString(CTE_TIP_INTERES).equals("00") || datos.getString(CTE_TIP_INTERES).equals("02") || datos.getString(CTE_TIP_INTERES).equals("06")) {
                                                    interesO.setBonificacion(CTE_SI);
                                                }
                                                if (datos.getString(CTE_TIP_INTERES).equals("05")) {
                                                    if (0 == datos.getBigDecimal(CTE_GESTION_CAMPA_PRESTAMOS).compareTo(new BigDecimal(2))) {
                                                        interesO.setBonificacion(CTE_SI);
                                                    } else {
                                                        interesO.setBonificacion(CTE_NO);
                                                    }
                                                }
                                                if (datos.getString(CTE_TIP_INTERES).equals("00") || datos.getString(CTE_TIP_INTERES).equals("01") || datos.getString(CTE_TIP_INTERES).equals("06")) {
                                                    interesO.setIndicadorTipoReferencia(BigDecimal.ZERO);
                                                } else {
                                                    interesO.setIndicadorTipoReferencia(BigDecimal.ONE);
                                                }
                                                switch(new BigDecimal(datosInteres[cont].getString(CTE_TIPO_INTERES_052)).intValue()) {
                                                    case 0:
                                                        {
                                                            interesO.setIndicadorDiferencialAlternativo(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 1:
                                                        {
                                                            interesO.setIndicadorDiferencialAlternativo(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 2:
                                                        {
                                                            interesO.setIndicadorDiferencialAlternativo(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 3:
                                                        {
                                                            interesO.setDiferencialAlternativo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052_290).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                                            break;
                                                        }
                                                    case 4:
                                                        {
                                                            interesO.setDiferencialAlternativo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052_290).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                                            break;
                                                        }
                                                    case 5:
                                                        {
                                                            interesO.setDiferencialAlternativo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052_290).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                                            break;
                                                        }
                                                }
                                                // 
                                                interesO.setNumPeriodosPeriodiciad(new BigDecimal(datosInteres[cont].getBigDecimal(CTE_PERIDICIDAD_MUN_PERIODO_052).toString()));
                                                interesO.setUnidadPeriodosPeriodiciad(datosInteres[cont].getString(CTE_PERIDICIDAD_UNIDAD_PERIODO_052));
                                                interesO.setTipoPeriodosPeriodiciad(datosInteres[cont].getBigDecimal(CTE_PERIDICIDAD_TIPO_PERIODO_052));
                                                // 
                                                interesO.setInteres(datosInteres[cont].getBigDecimal(CTE_INTERES_052).setScale(4).toString());
                                                interesO.setValoracion(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMLV_IND_VALORACION, datosInteres[cont].getString(CTE_VALORACION_052)));
                                                if (!isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                                                    interesO.setGestionCampañas(datosInteres[cont].getBigDecimal(CTE_GESTION_CAMPANAS_052).toString());
                                                    interesO.setNumPeriodosRevision(datosInteres[cont].getBigDecimal(CTE_NUM_PERIODOS_REVISION_052));
                                                    interesO.setUnidadPeriodosRevision(datosInteres[cont].getString(CTE_UNIDAD_PERIODOS_REVISION_052));
                                                    interesO.setTipoPeriodosRevision(datosInteres[cont].getBigDecimal(CTE_TIPO_PERIODOS_REVISION_052));
                                                    interesO.setPorcentajeMinVariacion(datosInteres[cont].getBigDecimal(CTE_MINIMO_VARIACION_052));
                                                    interesO.setMinimo(datosInteres[cont].getBigDecimal(CTE_SUELO_052).setScale(4).toString());
                                                    interesO.setMaximo(datosInteres[cont].getBigDecimal(CTE_TECHO_052).setScale(4).toString());
                                                }
                                                interesO.setAplicaSueloInteresInicial(datosInteres[cont].getBigDecimal(CTE_APLICA_SUELO_INT_INICIAL_052));
                                                interesO.setSobreAplicaMinimo(datosInteres[cont].getBigDecimal(CTE_SOBRE_APLICA_SUELO_052).toString());
                                                if (0 != BigDecimal.ZERO.compareTo(datosInteres[cont].getBigDecimal(CTE_PRIORIDAD_052)) && isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                                                    interesO.setPrioridad(datosInteres[cont].getBigDecimal(CTE_PRIORIDAD_052));
                                                }
                                                interesO.setTipoDemora(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMLV_TIPO_INTERES_DEMORA, datosInteres[cont].getBigDecimal(CTE_TIPO_DEMORA_052).toString()));
                                                interesO.setIdTipoDemora(datosInteres[cont].getBigDecimal(CTE_TIPO_DEMORA_052));
                                                interesO.setIndicadorTipoDemora(BigDecimal.ZERO);
                                                if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ZERO) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ONE)) {
                                                    interesO.setIndicadorPagoUnico(BigDecimal.ZERO);
                                                } else if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(2)) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(3))) {
                                                    interesO.setIndicadorPagoUnico(BigDecimal.ONE);
                                                } else {
                                                    interesO.setIndicadorPagoUnico(BigDecimal.ZERO);
                                                }
                                            }
                                        }
                                    }
                                    // Sustitutivo
                                    if (0 == datosi.getBigDecimal(CTE_TIPO).compareTo(BigDecimal.ONE)) {
                                        if (0 == datosi.getBigDecimal(CTE_TIPO_REFERENCIA).compareTo(datostr.getBigDecimal(CTE_TIPO_REFERENCIA_018))) {
                                            if (0 == datosi.getBigDecimal(CTE_TIPO_REFERENCIA).compareTo(datosInteres[cont].getBigDecimal(CTE_TIPO_REFERENCIA_052))) {
                                                listaIntereses.get(0).setIndicadorCheckBloqueoPrioridad(visible);
                                                interesO.setTieneSustitutivo(BigDecimal.ONE);
                                                interesO.setTipoReferenciaSust(datosInteres[cont].getBigDecimal(CTE_TIPO_REFERENCIA_052).toString().concat(" - ").concat(datostr.getString(CTE_DESCRIPCION_REFERENCIA_018)));
                                                interesO.setIdTipoReferenciaSust(datosInteres[cont].getBigDecimal(CTE_TIPO_REFERENCIA_052));
                                                listaIntereses.get(0).setIndicadorDiferencialSust(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datosi.getString(CTE_INDICADOR_DIFERENCIAL))));
                                                listaIntereses.get(0).setIndicadorDiferencialAlternativoSust(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datosi.getString(CTE_INDICADOR_DIFERENCIAL_ALTERNATIVO))));
                                                listaIntereses.get(0).setTipoReferenciaSust(interesO.getTipoReferenciaSust());
                                                listaIntereses.get(0).setIdTipoReferenciaSust(interesO.getIdTipoReferenciaSust());
                                                listaIntereses.get(0).setDiferencialSustitutivo(new BigDecimal(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_052).setScale(4).toString()));
                                                listaIntereses.get(0).setDiferencialAlternativoSustitutivo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                                listaIntereses.get(0).setIndicadorTipoReferenciaSust(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_TIPO_REFERENCIA))));
                                                switch(new BigDecimal(datosInteres[cont].getString(CTE_TIPO_INTERES_052)).intValue()) {
                                                    case 0:
                                                        {
                                                            listaIntereses.get(0).setIndicadorDiferencialAlternativoSust(BigDecimal.ZERO);
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 1:
                                                        {
                                                            listaIntereses.get(0).setIndicadorDiferencialAlternativoSust(BigDecimal.ZERO);
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 2:
                                                        {
                                                            listaIntereses.get(0).setIndicadorDiferencialAlternativoSust(BigDecimal.ZERO);
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 3:
                                                        {
                                                            listaIntereses.get(0).setDiferencialAlternativoSustitutivo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052_290).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 4:
                                                        {
                                                            listaIntereses.get(0).setDiferencialAlternativoSustitutivo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052_290).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 5:
                                                        {
                                                            listaIntereses.get(0).setDiferencialAlternativoSustitutivo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                                            if (0 == datos.getBigDecimal(CTE_GESTION_CAMPA_PRESTAMOS).compareTo(new BigDecimal(2))) {
                                                                listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            } else if (0 == datos.getBigDecimal(CTE_GESTION_CAMPA_PRESTAMOS).compareTo(BigDecimal.ONE)) {
                                                                listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ONE);
                                                            } else {
                                                                listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ONE);
                                                            }
                                                            break;
                                                        }
                                                    case 6:
                                                        {
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                }
                                            } else // Si no tiene datos en el CNTX 052
                                            // los obtiene del 015 y 018
                                            {
                                                interesO.setIndicadorCheckBloqueoPrioridad(visible);
                                                String diferencial = UtilidadesGestionIndicadores.cruceCatalogo(datosi.getString(CTE_INDICADOR_DIFERENCIAL_MIN_MAX), datosi.getBigDecimal(CTE_DIFERENCIAL_MIN_MAX_ESTANDAR).setScale(4).toString(), datosi.getBigDecimal(CTE_DIFERENCIAL_MIN_MAX_ESTANDAR).setScale(4).toString());
                                                listaIntereses.get(0).setTieneSustitutivo(BigDecimal.ZERO);
                                                interesO.setTipoReferenciaSust(datostr.getBigDecimal(CTE_TIPO_REFERENCIA_018).toString().concat(new Mensaje(ServicioNegocio.getContexto(), _45).toString()).concat(datostr.getString(CTE_DESCRIPCION_REFERENCIA_018)));
                                                interesO.setIdTipoReferenciaSust(datosi.getBigDecimal(CTE_TIPO_REFERENCIA));
                                                listaIntereses.get(0).setIndicadorDiferencialSust(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datosi.getString(CTE_INDICADOR_DIFERENCIAL))));
                                                listaIntereses.get(0).setIndicadorDiferencialAlternativoSust(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datosi.getString(CTE_INDICADOR_DIFERENCIAL_ALTERNATIVO))));
                                                listaIntereses.get(0).setTipoReferenciaSust(interesO.getTipoReferenciaSust());
                                                listaIntereses.get(0).setIdTipoReferenciaSust(interesO.getIdTipoReferenciaSust());
                                                if (!Helper.isNullOrEmpty(UtilidadesGestionIndicadores.cruceCatalogo(datosi.getString(CTE_INDICADOR_DIFERENCIAL), datosi.getBigDecimal(CTE_DIFERENCIAL_ESTANDAR).setScale(4).toString(), null))) {
                                                    listaIntereses.get(0).setDiferencialSustitutivo(new BigDecimal(UtilidadesGestionIndicadores.cruceCatalogo(datosi.getString(CTE_INDICADOR_DIFERENCIAL), datosi.getBigDecimal(CTE_DIFERENCIAL_ESTANDAR).setScale(4).toString(), null)));
                                                }
                                                listaIntereses.get(0).setDiferencialAlternativoSustitutivo(concatenado(new BigDecimal(UtilidadesGestionIndicadores.cruceCatalogo(datosi.getString(CTE_INDICADOR_DIFERENCIAL), datosi.getBigDecimal(CTE_DIFERENCIAL_ESTANDAR).setScale(4).toString(), null)), datos.getString(CTE_TIP_INTERES)));
                                                listaIntereses.get(0).setIndicadorTipoReferenciaSust(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_TIPO_REFERENCIA))));
                                                switch(new BigDecimal(datos.getString(CTE_TIP_INTERES)).intValue()) {
                                                    case 0:
                                                        {
                                                            listaIntereses.get(0).setIndicadorDiferencialAlternativoSust(BigDecimal.ZERO);
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 1:
                                                        {
                                                            listaIntereses.get(0).setIndicadorDiferencialAlternativoSust(BigDecimal.ZERO);
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 2:
                                                        {
                                                            listaIntereses.get(0).setIndicadorDiferencialAlternativoSust(BigDecimal.ZERO);
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 3:
                                                        {
                                                            listaIntereses.get(0).setDiferencialAlternativoSustitutivo(diferencial.concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_MINIMO).toString()));
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 4:
                                                        {
                                                            listaIntereses.get(0).setDiferencialAlternativoSustitutivo(diferencial.concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_MINIMO).toString()));
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                    case 5:
                                                        {
                                                            listaIntereses.get(0).setDiferencialAlternativoSustitutivo(diferencial.concat(new Mensaje(ServicioNegocio.getContexto(), CTE_TXT_MINIMO).toString()));
                                                            if (0 == datos.getBigDecimal(CTE_GESTION_CAMPA_PRESTAMOS).compareTo(new BigDecimal(2))) {
                                                                listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            } else if (0 == datos.getBigDecimal(CTE_GESTION_CAMPA_PRESTAMOS).compareTo(BigDecimal.ONE)) {
                                                                listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ONE);
                                                            } else {
                                                                listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ONE);
                                                            }
                                                            break;
                                                        }
                                                    case 6:
                                                        {
                                                            listaIntereses.get(0).setIndicadorGestionCampanas(BigDecimal.ZERO);
                                                            break;
                                                        }
                                                }
                                            }
                                        }
                                    }
                                }
                            } else {
                                interesO.setIndicadorDiferencialInteres(BigDecimal.ZERO);
                                interesO.setIndicadorDiferencialAlternativo(BigDecimal.ZERO);
                                interesO.setIndicadorSuelo(BigDecimal.ZERO);
                                interesO.setIndicadorTecho(BigDecimal.ZERO);
                                if (!isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                                    interesO.setDiferencial(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_052).setScale(4).toString());
                                }
                                interesO.setIndicadorPorcentajeMinVar(BigDecimal.ZERO);
                                interesO.setIndicadorPlazo(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_PLAZO))));
                                interesO.setIndicadorNumPeriododsPeriocidad(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_NUM_PERIODOS_PERIODICIDAD))));
                                interesO.setIndicadorUnidadPeriodosPeriodicidad(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_UNIDAD_PERIODOS_PERIODICIDAD))));
                                interesO.setIndicadorTipoPeriodo(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_TIPO_PERIODOS_PERIODICIDAD))));
                                interesO.setIndicadorInteres(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_INTERES))));
                                interesO.setIndicadorValoracion(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_VALORACION))));
                                if (datos.getString(CTE_TIP_INTERES).equals("00") || datos.getString(CTE_TIP_INTERES).equals("01") || datos.getString(CTE_TIP_INTERES).equals("06")) {
                                    interesO.setIndicadorTipoReferencia(BigDecimal.ZERO);
                                } else {
                                    interesO.setIndicadorTipoReferencia(BigDecimal.ONE);
                                }
                                interesO.setIndicadorNumPeriodosRevision(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_INDICADOR_NUM_PERIODOS_REVISION))));
                                interesO.setIndicadorUnidadPeriodosRevision(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_UNIDAD_NUM_PERIODOS_REVISION))));
                                interesO.setIndicadorTipoPeriodosRevision(UtilidadesGestionIndicadores.indicadorBloqueo(new BigDecimal(datos.getString(CTE_TIPO_NUM_PERIODOS_REVISION))));
                                // interesO.setIndicadorTipoPeriodosRevision(UtilidadesGestionIndicadores.indicadorBloqueo(new
                                // BigDecimal(datos.getString(CTE_INDICADOR_BLOQUEO))));
                                interesO.setDemora(UtilidadesGestionIndicadores.cruceCatalogo(datos.getString(CTE_INDICADOR_PORCENTAJE_SOBRE_CAPITAL), datos.getBigDecimal(CTE_PORCENTAJE_SOBRE_CAPITAL).toString(), datosInteres[cont].getBigDecimal(CTE_DEMORA_SOBRE_INTERES_052).toString()));
                                for (CondicionesInteresC condicion : lista) {
                                    if (0 == datos.getBigDecimal(CTE_ORDEN_014).compareTo(new BigDecimal(condicion.getCondicionesInteresKey().getIntOrdenDelTramo()))) {
                                        if (0 == condicion.getIntPorDemoraSobreCapital().compareTo(datos.getBigDecimal(CTE_PORCENTAJE_SOBRE_INTERES))) {
                                            interesO.setDemora(UtilidadesGestionIndicadores.cruceCatalogo(datos.getString(CTE_INDICADOR_PORCENTAJE_SOBRE_CAPITAL), datos.getBigDecimal(CTE_PORCENTAJE_SOBRE_INTERES).toString(), null));
                                        } else {
                                            interesO.setDemora(UtilidadesGestionIndicadores.cruceCatalogo(datos.getString(CTE_INDICADOR_PORCENTAJE_SOBRE_CAPITAL), condicion.getIntPorDemoraSobreCapital().toString(), null));
                                        }
                                        if (0 != condicion.getIntSuelo().compareTo(BigDecimal.ZERO)) {
                                            interesO.setSueloAplicaInt("0");
                                        }
                                    }
                                }
                                if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ZERO) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(2))) {
                                    interesO.setPagoUnico(BigDecimal.ZERO.toString());
                                }
                                if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ONE) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(3))) {
                                    interesO.setPagoUnico(BigDecimal.ONE.toString());
                                }
                                if (datos.getString(CTE_TIP_INTERES).equals("01") || datos.getString(CTE_TIP_INTERES).equals("03") || datos.getString(CTE_TIP_INTERES).equals("04")) {
                                    interesO.setBonificacion(CTE_SI);
                                }
                                if (datos.getString(CTE_TIP_INTERES).equals("00") || datos.getString(CTE_TIP_INTERES).equals("02") || datos.getString(CTE_TIP_INTERES).equals("06")) {
                                    interesO.setBonificacion(CTE_NO);
                                }
                                if (datos.getString(CTE_TIP_INTERES).equals("05")) {
                                    if (0 == datos.getBigDecimal(CTE_GESTION_CAMPA_PRESTAMOS).compareTo(new BigDecimal(2))) {
                                        interesO.setBonificacion(CTE_SI);
                                    } else {
                                        interesO.setBonificacion(CTE_NO);
                                    }
                                }
                                switch(new BigDecimal(datosInteres[cont].getString(CTE_TIPO_INTERES_052)).intValue()) {
                                    case 0:
                                        {
                                            interesO.setIndicadorDiferencialAlternativo(BigDecimal.ZERO);
                                            break;
                                        }
                                    case 1:
                                        {
                                            interesO.setIndicadorDiferencialAlternativo(BigDecimal.ZERO);
                                            break;
                                        }
                                    case 2:
                                        {
                                            interesO.setIndicadorDiferencialAlternativo(BigDecimal.ZERO);
                                            break;
                                        }
                                    case 3:
                                        {
                                            if (!isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                                                interesO.setDiferencialAlternativo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052_290).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                            }
                                            break;
                                        }
                                    case 4:
                                        {
                                            if (!isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                                                interesO.setDiferencialAlternativo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052_290).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                            }
                                            break;
                                        }
                                    case 5:
                                        {
                                            if (!isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                                                interesO.setDiferencialAlternativo(concatenado(datosInteres[cont].getBigDecimal(CTE_DIFERENCIAL_BONIFICADO_052_290).setScale(4), datos.getString(CTE_TIP_INTERES)));
                                            }
                                            break;
                                        }
                                }
                                // 
                                interesO.setNumPeriodosPeriodiciad(new BigDecimal(datosInteres[cont].getBigDecimal(CTE_PERIDICIDAD_MUN_PERIODO_052).toString()));
                                interesO.setUnidadPeriodosPeriodiciad(datosInteres[cont].getString(CTE_PERIDICIDAD_UNIDAD_PERIODO_052));
                                interesO.setTipoPeriodosPeriodiciad(datosInteres[cont].getBigDecimal(CTE_PERIDICIDAD_TIPO_PERIODO_052));
                                // 
                                interesO.setInteres(datosInteres[cont].getBigDecimal(CTE_INTERES_052).setScale(4).toString());
                                interesO.setValoracion(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMLV_IND_VALORACION, datosInteres[cont].getString(CTE_VALORACION_052)));
                                interesO.setIdValoracion(new BigDecimal(datosInteres[cont].getString(CTE_VALORACION_052)));
                                // interesO.setValoracion(datosInteres[cont].getString(CTE_VALORACION_052));
                                if (!isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                                    interesO.setGestionCampañas(datosInteres[cont].getBigDecimal(CTE_GESTION_CAMPANAS_052).toString());
                                    interesO.setNumPeriodosRevision(datosInteres[cont].getBigDecimal(CTE_NUM_PERIODOS_REVISION_052));
                                    interesO.setUnidadPeriodosRevision(datosInteres[cont].getString(CTE_UNIDAD_PERIODOS_REVISION_052));
                                    interesO.setTipoPeriodosRevision(datosInteres[cont].getBigDecimal(CTE_TIPO_PERIODOS_REVISION_052));
                                    interesO.setPorcentajeMinVariacion(datosInteres[cont].getBigDecimal(CTE_MINIMO_VARIACION_052));
                                    interesO.setMinimo(datosInteres[cont].getBigDecimal(CTE_SUELO_052).toString());
                                    interesO.setMaximo(datosInteres[cont].getBigDecimal(CTE_TECHO_052).toString());
                                }
                                interesO.setAplicaSueloInteresInicial(datosInteres[cont].getBigDecimal(CTE_APLICA_SUELO_INT_INICIAL_052));
                                interesO.setSobreAplicaMinimo(datosInteres[cont].getBigDecimal(CTE_SOBRE_APLICA_SUELO_052).toString());
                                if (0 != BigDecimal.ZERO.compareTo(datosInteres[cont].getBigDecimal(CTE_PRIORIDAD_052)) && isPrestamoFijo(datosInteres[cont].getBigDecimal(CTE_TIPO_CONDICION_052), datosInteres[cont].getString(CTE_TIPO_INTERES_052))) {
                                    interesO.setPrioridad(datosInteres[cont].getBigDecimal(CTE_PRIORIDAD_052));
                                }
                                interesO.setTipoDemora(obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMLV_TIPO_INTERES_DEMORA, datosInteres[cont].getBigDecimal(CTE_TIPO_DEMORA_052).toString()));
                                interesO.setIndicadorTipoDemora(BigDecimal.ZERO);
                                if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ZERO) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(BigDecimal.ONE)) {
                                    interesO.setIndicadorPagoUnico(BigDecimal.ZERO);
                                } else if (0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(2)) || 0 == datos.getBigDecimal(CTE_PAGO_UNICO).compareTo(new BigDecimal(3))) {
                                    interesO.setIndicadorPagoUnico(BigDecimal.ONE);
                                } else {
                                    interesO.setIndicadorPagoUnico(BigDecimal.ZERO);
                                }
                            }
                            if (listaIntereses.isEmpty()) {
                                listaIntereses.add(interesO);
                            }
                        }
                    }
                    cont++;
                }
            }
        }
        return listaIntereses;
    }

    /**
     * @param datosInteres
     * @return
     */
    public static List<InteresDifTO> valoresInteresDiferencial(IContexto[] datosInteres) {
        InteresDifTO interes = new InteresDifTO();
        BigDecimal visible = BigDecimal.ONE;
        BigDecimal noVisible = BigDecimal.ZERO;
        List<InteresDifTO> lista = new ArrayList<InteresDifTO>();
        for (IContexto registro : datosInteres) {
            interes.setIndicadorVisibilidadTechoSuelo(noVisible);
            interes.setIndicadorVisibilidadMinimo(noVisible);
            interes.setIndicadorVisibilidadMaximo(noVisible);
            interes.setIndicadorVisibilidadMinimoVariacion(noVisible);
            interes.setIndicadorVisibilidadMínimoSecciónInferior(noVisible);
            interes.setIndicadorVisibilidadAplicaIntIni(noVisible);
            interes.setIndicadorPrestamoVariableFijo(noVisible);
            interes.setIndicadorPrestamoReferenciado(noVisible);
            interes.setIndicadorVisibilidadAjusteInteres(noVisible);
            if (!isPrestamoFijo(registro.getBigDecimal(CTE_TIPO_CONDICION_052), registro.getString(CTE_TIPO_INTERES_052))) {
                interes.setIndicadorVisibilidadAjusteInteres(BigDecimal.ONE);
                interes.setIndicadorPrestamoVariableFijo(BigDecimal.ONE);
                interes.setIndicadorVisibilidadTechoSuelo(visible);
                interes.setIndicadorVisibilidadMinimo(visible);
                interes.setIndicadorVisibilidadMaximo(visible);
                interes.setIndicadorVisibilidadMinimoVariacion(visible);
                interes.setIndicadorVisibilidadMínimoSecciónInferior(visible);
                interes.setIndicadorVisibilidadAplicaIntIni(visible);
                if (Utilidades.esTipoReferenciaNoReferenciado(registro.getBigDecimal(CTE_TIPO_REFERENCIA_052).toString())) {
                    if (registro.getString(CTE_TIPO_INTERES_052).equals("03")) {
                        interes.setIndicadorVisibilidadMinimo(noVisible);
                        interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), INTER_S_M_XIMO_APLICAR_BONIFICACI_N_509579681).toString());
                        interes.setLiteralMaximo(new Mensaje(ServicioNegocio.getContexto(), INTER_S_BONIFICACI_N_708356412).toString());
                    }
                    if (registro.getString(CTE_TIPO_INTERES_052).equals("04")) {
                        interes.setIndicadorVisibilidadMaximo(BigDecimal.ZERO);
                        interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), INTER_S_M_NIMO_APLICAR_PENALIZACI_N_1713926098).toString());
                        interes.setLiteralMinimo(new Mensaje(ServicioNegocio.getContexto(), INTER_S_BONIFICACI_N_708356412).toString());
                    }
                    interes.setIndicadorPrestamoReferenciado(BigDecimal.ZERO);
                } else {
                    if (0 == BigDecimal.ZERO.compareTo(registro.getBigDecimal(CTE_APLICA_SUELO_INT_INICIAL_052))) {
                        interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_1840060995).toString());
                    } else if (0 == BigDecimal.ONE.compareTo(registro.getBigDecimal(CTE_APLICA_SUELO_INT_INICIAL_052))) {
                        interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_INTER_S_INICIAL_1219035778).toString());
                    } else if (0 == new BigDecimal(2).compareTo(registro.getBigDecimal(CTE_APLICA_SUELO_INT_INICIAL_052))) {
                        interes.setLiteralSueloTecho(new Mensaje(ServicioNegocio.getContexto(), SUELO_TECHO_APLICAN_TIPO_REFERENCIA_1669293875).toString());
                    }
                    interes.setLiteralMinimo(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_952133955).toString());
                    interes.setLiteralMaximo(new Mensaje(ServicioNegocio.getContexto(), M_XIMO_962918297).toString());
                    interes.setLiteralMinimoVariacion(new Mensaje(ServicioNegocio.getContexto(), M_NIMO_VARIACI_N_1591999918).toString());
                    interes.setLiteralSobreAplicaSuelo(new Mensaje(ServicioNegocio.getContexto(), APLICA_INTER_S_INICIAL_SUELO_1433777474).toString());
                    interes.setIndicadorPrestamoReferenciado(BigDecimal.ONE);
                }
            }
            interes.setFlexibilidad(Utilidades.comprobarDatoNull(GestionConsultaDatosIntereses.obtenerDescripcionLista(CTE_ID_IDEALISTA, registro.getBigDecimal(CTE_INDICADOR_FLEXIBILDIAD_052).toString())));
            if (0 != BigDecimal.ZERO.compareTo(registro.getBigDecimal(CTE_INDICADOR_FLEXIBILDIAD_052))) {
                interes.setIndicadorFlexibilidad(Utilidades.comprobarDatoNull(BigDecimal.ONE.toString()));
            } else {
                interes.setIndicadorFlexibilidad(Utilidades.comprobarDatoNull(BigDecimal.ZERO.toString()));
            }
            // en
            interes.setIdTipoInteres(Utilidades.comprobarDatoNull(registro.getString(CTE_TIPO_INTERES_052)));
            // el
            // contexto
            // es
            // tipo
            // string
            interes.setTipoInteres(Utilidades.comprobarDatoNull(GestionConsultaDatosIntereses.obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMNLV_TIPO, datosInteres[0].getString(CTE_TIPO_INTERES_052))));
            if (!Helper.isNullOrEmpty(registro.getBigDecimal(CTE_ORDEN_052))) {
                // en
                interes.setOrden(new BigDecimal(Utilidades.comprobarDatoNull(registro.getBigDecimal(CTE_ORDEN_052).toString())));
            // el
            // contexto
            // es
            // tipo
            // string
            }
            // COMPROBAR SI CON EL DATO DE SALIDA QUE NOS DAN NOS SIRBE
            if (!Helper.isNullOrEmpty(registro.getBigDecimal(CTE_TIPO_REFERENCIA_052))) {
                interes.setTipoReferencia(Utilidades.comprobarDatoNull(datosInteres[0].getBigDecimal(CTE_TIPO_REFERENCIA_052).toString()));
            }
            if (!Helper.isNullOrEmpty(registro.getBigDecimal(CTE_DIFERENCIAL_052))) {
                interes.setDiferencial(Utilidades.comprobarDatoNull(datosInteres[0].getBigDecimal(CTE_DIFERENCIAL_052).toString()));
            }
            if (registro.getString(CTE_TIPO_INTERES_052).equals("03")) {
                interes.setDiferencialAlternativo(Utilidades.comprobarDatoNull(UtilidadesGestionIndicadores.cruceCatalogo(registro.getBigDecimal(CTE_NIVEL_DIFERENCIAL_MINIMO_MAXIMO_052).setScale(4).toString(), registro.getBigDecimal(CTE_DIFERENCIAL_MINIMO_MAXIMO_052).setScale(4).toString(), null) + new Mensaje(ServicioNegocio.getContexto(), M_NIMO_548618513).toString()));
            }
            if (datosInteres[0].getString(CTE_TIPO_INTERES_052).equals("04")) {
                interes.setDiferencialAlternativo(Utilidades.comprobarDatoNull(UtilidadesGestionIndicadores.cruceCatalogo(registro.getBigDecimal(CTE_NIVEL_DIFERENCIAL_MINIMO_MAXIMO_052).setScale(4).toString(), registro.getBigDecimal(CTE_DIFERENCIAL_MINIMO_MAXIMO_052).setScale(4).toString(), null) + new Mensaje(ServicioNegocio.getContexto(), M_XIMO_214303911).toString()));
            }
            if (registro.getString(CTE_TIPO_INTERES_052).equals("05")) {
                interes.setDiferencialAlternativo(Utilidades.comprobarDatoNull(UtilidadesGestionIndicadores.cruceCatalogo(registro.getBigDecimal(CTE_NIVEL_DIFERENCIAL_MINIMO_MAXIMO_052).setScale(4).toString(), registro.getBigDecimal(CTE_DIFERENCIAL_MINIMO_MAXIMO_052).setScale(4).toString(), null) + new Mensaje(ServicioNegocio.getContexto(), BONIFICADO_145800506).toString()));
            }
            if (!Helper.isNullOrEmpty(registro.getBigDecimal(CTE_INTERES_052))) {
                interes.setInteres(Utilidades.comprobarDatoNull(registro.getBigDecimal(CTE_INTERES_052).setScale(4).toString()));
            }
            if (!Helper.isNullOrEmpty(registro.getBigDecimal(CTE_PLAZO_TRAMO_INTERES_052))) {
                // en
                interes.setPlazo(new BigDecimal(Utilidades.comprobarDatoNull(registro.getBigDecimal(CTE_PLAZO_TRAMO_INTERES_052).toString())));
            // el
            // cntx
            // tipo
            // String
            }
            // Periodo mínimo de revision
            if (!Helper.isNullOrEmpty(registro.getBigDecimal(CTE_PERIODO_MIN_REVISION_052))) {
                interes.setPeriodicidadRevision(Utilidades.comprobarDatoNull(registro.getBigDecimal(CTE_PERIODO_MIN_REVISION_052).toString()));
            }
            interes.setPeriodicidadInteres(Utilidades.comprobarDatoNull(GestionConsultaDatosIntereses.obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMNLV_PERIODICIDAD_CONSULTA, registro.getBigDecimal(CTE_PERIDICIDAD_MUN_PERIODO_052).toString().concat(registro.getString(CTE_PERIDICIDAD_UNIDAD_PERIODO_052)).concat(registro.getBigDecimal(CTE_PERIDICIDAD_TIPO_PERIODO_052).toString()))));
            interes.setValoracion(Utilidades.comprobarDatoNull(GestionConsultaDatosIntereses.obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMLV_IND_VALORACION, registro.getString(CTE_VALORACION_052))));
            // en
            interes.setIdValoracion(new BigDecimal(Utilidades.comprobarDatoNull(registro.getString(CTE_VALORACION_052))));
            // el
            // ctx
            // tipo
            // string
            interes.setPagoUnico(Utilidades.comprobarDatoNull(registro.getString(CTE_PAGO_UNICO_A_VTO_FINAL_052)));
            if (registro.getString(CTE_TIPO_INTERES_052).equals(CTE_01) || registro.getString(CTE_TIPO_INTERES_052).equals(CTE_03) || registro.getString(CTE_TIPO_INTERES_052).equals(CTE_04)) {
                interes.setBonificacion(CTE_SI);
            }
            if (registro.getString(CTE_TIPO_INTERES_052).equals(CTE_00) || registro.getString(CTE_TIPO_INTERES_052).equals(CTE_02) || registro.getString(CTE_TIPO_INTERES_052).equals(CTE_06)) {
                interes.setBonificacion(CTE_NO);
            }
            if (registro.getString(CTE_TIPO_INTERES_052).equals(CTE_05)) {
                if (registro.getBigDecimal(CTE_INDICADOR_FLEXIBILDIAD_052).intValue() == 2) {
                    interes.setBonificacion(CTE_SI);
                } else {
                    interes.setBonificacion(CTE_NO);
                }
            }
            if (!Helper.isNullOrEmpty(registro.getBigDecimal(CTE_TIPO_INTERES_DEMORA_052))) {
                interes.setTipoDemora(Utilidades.comprobarDatoNull(GestionConsultaDatosIntereses.obtenerDescripcionLista(CTE_ID_IDEALISTA_ANPMLV_TIPO_INTERES_DEMORA, registro.getBigDecimal(CTE_TIPO_INTERES_DEMORA_052).setScale(4).toString())));
            }
            if (!Helper.isNullOrEmpty(registro.getBigDecimal(CTE_TIPO_INTERES_DEMORA_052))) {
                // en
                interes.setIdTipoDemora(new BigDecimal(Utilidades.comprobarDatoNull(registro.getBigDecimal(CTE_TIPO_INTERES_DEMORA_052).setScale(4).toString())));
            // el
            // cntx
            // tipo
            // String
            }
            if (!Helper.isNullOrEmpty(datosInteres[0].getBigDecimal(CTE_TIPO_CONDICION_052))) {
                // en
                interes.setTipoCondicion(new BigDecimal(Utilidades.comprobarDatoNull(datosInteres[0].getBigDecimal(CTE_TIPO_CONDICION_052).toString())));
            // el
            // cntx
            // tipo
            // String
            }
            if (!Helper.isNullOrEmpty(datosInteres[0].getBigDecimal(CTE_DEMORA_SOBRE_INTERES_052))) {
                interes.setDemora(Utilidades.comprobarDatoNull(datosInteres[0].getBigDecimal(CTE_DEMORA_SOBRE_INTERES_052).toString()));
            }
            // Suelo
            if (!Helper.isNullOrEmpty(datosInteres[0].getBigDecimal(CTE_SUELO_052))) {
                interes.setMinimo(Utilidades.comprobarDatoNull(datosInteres[0].getBigDecimal(CTE_SUELO_052).setScale(4).toString()));
            }
            // sobre que aplica el suelo
            if (!Helper.isNullOrEmpty(datosInteres[0].getBigDecimal(CTE_SOBRE_APLICA_SUELO_052))) {
                interes.setSobreAplicaMinimo(Utilidades.comprobarDatoNull(datosInteres[0].getBigDecimal(CTE_SOBRE_APLICA_SUELO_052).toString().toString()));
            }
            if (!Helper.isNullOrEmpty(datosInteres[0].getBigDecimal(CTE_APLICA_SUELO_INT_INICIAL_052))) {
                interes.setSueloAplicaInt(Utilidades.comprobarDatoNull(datosInteres[0].getBigDecimal(CTE_APLICA_SUELO_INT_INICIAL_052).toString()));
            }
            // techo
            if (!Helper.isNullOrEmpty(datosInteres[0].getBigDecimal(CTE_TECHO_052))) {
                interes.setMaximo(Utilidades.comprobarDatoNull(datosInteres[0].getBigDecimal(CTE_TECHO_052).setScale(4).toString()));
            }
            if (!Helper.isNullOrEmpty(datosInteres[0].getBigDecimal(CTE_MIN_VARIACION_052))) {
                interes.setMinimoVariacion(Utilidades.comprobarDatoNull(datosInteres[0].getBigDecimal(CTE_MIN_VARIACION_052).toString()));
            }
            if (!lista.contains(interes)) {
                lista.add(interes);
            }
        }
        return lista;
    }

    private static final String M_NIMO_952133955 = "M_NIMO_952133955";

    private static final String M_XIMO_962918297 = "M_XIMO_962918297";

    private static final String M_NIMO_VARIACI_N_1591999918 = "M_NIMO_VARIACI_N_1591999918";

    private static final String M_XIMO_TECHO_764767713 = "M_XIMO_TECHO_764767713";

    private static final String M_NIMO_SUELO_1295253080 = "M_NIMO_SUELO_1295253080";

    private static final String _45 = "_45";

    private static final String M_NIMO_548618513 = "M_NIMO_548618513";

    private static final String M_XIMO_214303911 = "M_XIMO_214303911";

    private static final String BONIFICADO_145800506 = "BONIFICADO_145800506";

    private static final String SUELO_TECHO_APLICAN_INTER_S_INICIAL_1219035778 = "SUELO_TECHO_APLICAN_INTER_S_INICIAL_1219035778";

    private static final String M_NIMO_VARIACI_N_1985489437 = "M_NIMO_VARIACI_N_1985489437";

    private static final String INTER_S_M_NIMO_APLICAR_PENALIZACI_N_1713926098 = "INTER_S_M_NIMO_APLICAR_PENALIZACI_N_1713926098";

    private static final String INTER_S_M_XIMO_APLICAR_BONIFICACI_N_509579681 = "INTER_S_M_XIMO_APLICAR_BONIFICACI_N_509579681";

    private static final String SUELO_TECHO_APLICAN_1840060995 = "SUELO_TECHO_APLICAN_1840060995";

    private static final String SUELO_TECHO_APLICAN_TIPO_REFERENCIA_53848191 = "SUELO_TECHO_APLICAN_TIPO_REFERENCIA_53848191";

    private static final String APLICA_INTER_S_INICIAL_SUELO_323345552 = "APLICA_INTER_S_INICIAL_SUELO_323345552";

    private static final String INTER_S_BONIFICACI_N_708356412 = "INTER_S_BONIFICACI_N_708356412";

    private static final String SUELO_TECHO_APLICAN_TIPO_REFERENCIA_1669293875 = "SUELO_TECHO_APLICAN_TIPO_REFERENCIA_1669293875";

    private static final String SUELO_TECHO_APLICAN_INTER_S_RESULTANTE_1586160686 = "SUELO_TECHO_APLICAN_INTER_S_RESULTANTE_1586160686";

    private static final String APLICA_INTER_S_INICIAL_SUELO_1433777474 = "APLICA_INTER_S_INICIAL_SUELO_1433777474";

    private static final String INTER_S_PENALIZACI_N_1693610471 = "INTER_S_PENALIZACI_N_1693610471";

    private static final String SUELO_APLICA_INTER_S_INICIAL_269091119 = "SUELO_APLICA_INTER_S_INICIAL_269091119";

    private static final String M_NIMO_VARIACI_N_APLICA_INTER_S_RESULTANTE_1942838056 = "M_NIMO_VARIACI_N_APLICA_INTER_S_RESULTANTE_1942838056";

    private static final String M_NIMO_VARIACI_N_APLICA_892411565 = "M_NIMO_VARIACI_N_APLICA_892411565";

    private static final String M_NIMO_VARIACI_N_APLICA_TIPO_REFERENCIA_1243367403 = "M_NIMO_VARIACI_N_APLICA_TIPO_REFERENCIA_1243367403";
}
